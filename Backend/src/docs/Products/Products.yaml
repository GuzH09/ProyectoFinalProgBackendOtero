openapi: 3.0.1
info:
  title: Products API
  description: API for managing products in the store
  version: 1.0.0

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth

  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: The product ID
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: The description of the product
        code:
          type: string
          description: The code of the product
        price:
          type: number
          format: float
          description: The price of the product
        stock:
          type: integer
          description: The stock of the product
        status:
          type: boolean
          description: The status of the product
        category:
          type: string
          description: The category of the product
        thumbnails:
          type: array
          items:
            type: string
            description: The URLs of the product thumbnails
        owner:
          type: string
          description: The owner of the product

paths:
  /api/products:
    get:
      tags: [Products]
      summary: Get all products
      description: Get all products with pagination, sorting, and query options
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of products per page
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
          description: Sort products by price
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
        - in: query
          name: stock
          schema:
            type: integer
          description: Filter products by stock
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalPages:
                    type: integer
                  prevPage:
                    type: integer
                  nextPage:
                    type: integer
                  page:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevLink:
                    type: string
                  nextLink:
                    type: string
                  isValid:
                    type: boolean
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags: [Products]
      summary: Create a new product
      description: Create a new product
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                code:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                category:
                  type: string
                thumbnails:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/products/{pid}:
    get:
      tags: [Products]
      summary: Get a product by ID
      description: Get a product by its ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The product ID
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags: [Products]
      summary: Update an existing product
      description: Update an existing product by its ID
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                code:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                category:
                  type: string
                thumbnails:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags: [Products]
      summary: Delete an existing product
      description: Delete an existing product by its ID
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The product ID
      responses:
        '201':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
